{"docstore/metadata": {"e96ceede-de26-414f-b42b-199834d0c6b5": {"doc_hash": "5b3827f918707ee1e2e5a1953ff335d8ab9b4b16caaeafd51521768f722bc8ff"}, "947d471c-5de6-42c7-ae03-9c9e0d82e0e7": {"doc_hash": "0e5c30f248bb6a10e3d2cdc5df784e45dccb37e6f875a16cc0a14d2e1e67ccb4"}, "d00b7eba-d864-405f-ade5-3390a405f762": {"doc_hash": "072438ab1f990a3a94bc57999454fcb7e4a2bea9bd2f7f0ffac0d306557a3645"}, "feff5b31-ab33-4b56-b67c-fd9463c55b7e": {"doc_hash": "780de3960a448c73b8c7fdf999eda52b51b46dca622d5125254c8901cc1edf25"}, "76efe84c-7f88-401d-9c5e-725d5621fd52": {"doc_hash": "911b78089cd1071fed64dbbb01c125e57938006d0fe9a6c7b513f4e9a27eb43b"}, "81a8913c-822e-4e79-8833-2f5b08316522": {"doc_hash": "358499806da840bc697aa13c04d5dd180bff4c0d18cda3ad5b61528398b9e814"}, "a94fec68-88fe-4283-85af-69ff58f97124": {"doc_hash": "d8c880517f7e75440b0217e580bb116ce02718e11117b81c92278e342454fd95"}, "b2507bfa-de06-4c44-afb4-49c78ecd4ec6": {"doc_hash": "5fe807fd8363ef32adf3244e093859652bdfcc4d2483471ae3eba43d87b3d59f"}, "819adf5a-5922-4e59-80b1-67a8615496cd": {"doc_hash": "4e36c9cc996df503dfb180df9e2f17e4aaa142b818769b509ce34ecb3d8d127d"}, "6d8d23f3-b908-4cae-9816-1e3fe5718c47": {"doc_hash": "5fddd8a1c88ca95d692cae4ecf1472abdec691786592cc40dfbb5a68a2907b40", "ref_doc_id": "e96ceede-de26-414f-b42b-199834d0c6b5"}, "58abc7aa-8b7a-44fc-957f-72bc95961353": {"doc_hash": "8b32d72e22d83e478e0f9ac43bfd8f3d9b1ce89f4a01c7ac20e445761d172d1e", "ref_doc_id": "e96ceede-de26-414f-b42b-199834d0c6b5"}, "15b62da5-a524-49ce-926a-ae7ded71c855": {"doc_hash": "acebf133a47c840fae5a4504bf00cb9b39317954e480fb29a11057c5c25b6ad0", "ref_doc_id": "947d471c-5de6-42c7-ae03-9c9e0d82e0e7"}, "9b4140fe-f35b-46c7-809c-5fe3c9a996bc": {"doc_hash": "db6799cefa9feeaa60edc58cae9447df31d849a5e420732f3243a9158c1140b0", "ref_doc_id": "947d471c-5de6-42c7-ae03-9c9e0d82e0e7"}, "19666e36-e38d-4091-b581-94485b534af7": {"doc_hash": "e26d7e99f695d2489a5506fb93c835c155dce1e9afcdc7cfb846913952c2d21d", "ref_doc_id": "d00b7eba-d864-405f-ade5-3390a405f762"}, "a9244bac-9166-4f94-a43c-9032f1a1890b": {"doc_hash": "c3e169439d90ee9e04c1407ab90acc9a73792aa8b2499a95abc8f2e5c1a2f694", "ref_doc_id": "d00b7eba-d864-405f-ade5-3390a405f762"}, "0ca9667f-d887-49c7-8e61-48a9f09d2928": {"doc_hash": "b8e26e692888d7e10e943c8cb0f266f7a2cc088c3b9bbb8536386b5692be44c7", "ref_doc_id": "feff5b31-ab33-4b56-b67c-fd9463c55b7e"}, "332850a3-e694-40eb-a9f4-29370fb870ee": {"doc_hash": "15dcae45091fd32781fb7b3634795fbe438baed395e7453f95aebeb525b7b792", "ref_doc_id": "feff5b31-ab33-4b56-b67c-fd9463c55b7e"}, "f406afed-9084-408e-a45e-56ca5cb7c8ac": {"doc_hash": "911b78089cd1071fed64dbbb01c125e57938006d0fe9a6c7b513f4e9a27eb43b", "ref_doc_id": "76efe84c-7f88-401d-9c5e-725d5621fd52"}, "6a81c1e3-7015-4838-b92e-7ba2daddc7b6": {"doc_hash": "514cd38012deadf63c4957eaab4d29f499e381fcd1e8d586deecad9f6c36fa27", "ref_doc_id": "81a8913c-822e-4e79-8833-2f5b08316522"}, "e3050b62-88fe-4864-a8cf-c7a4991221d0": {"doc_hash": "29400cc359fa35b0257a60612a8979b62f3bb4527068624e40ab743987b8e793", "ref_doc_id": "81a8913c-822e-4e79-8833-2f5b08316522"}, "ddfe2e85-6094-44e2-9422-94a455ac2cdb": {"doc_hash": "d8c880517f7e75440b0217e580bb116ce02718e11117b81c92278e342454fd95", "ref_doc_id": "a94fec68-88fe-4283-85af-69ff58f97124"}, "92791559-6a71-4111-9529-d76a113e40b7": {"doc_hash": "5fe807fd8363ef32adf3244e093859652bdfcc4d2483471ae3eba43d87b3d59f", "ref_doc_id": "b2507bfa-de06-4c44-afb4-49c78ecd4ec6"}, "3991b84f-fd81-4d6c-9625-363cd2fb1aab": {"doc_hash": "4e36c9cc996df503dfb180df9e2f17e4aaa142b818769b509ce34ecb3d8d127d", "ref_doc_id": "819adf5a-5922-4e59-80b1-67a8615496cd"}}, "docstore/data": {"6d8d23f3-b908-4cae-9816-1e3fe5718c47": {"__data__": {"id_": "6d8d23f3-b908-4cae-9816-1e3fe5718c47", "embedding": null, "metadata": {"page_label": "1", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e96ceede-de26-414f-b42b-199834d0c6b5", "node_type": null, "metadata": {"page_label": "1", "file_name": "bitcoin_es_latam.pdf"}, "hash": "5b3827f918707ee1e2e5a1953ff335d8ab9b4b16caaeafd51521768f722bc8ff"}, "3": {"node_id": "58abc7aa-8b7a-44fc-957f-72bc95961353", "node_type": null, "metadata": {"page_label": "1", "file_name": "bitcoin_es_latam.pdf"}, "hash": "8b32d72e22d83e478e0f9ac43bfd8f3d9b1ce89f4a01c7ac20e445761d172d1e"}}, "hash": "5fddd8a1c88ca95d692cae4ecf1472abdec691786592cc40dfbb5a68a2907b40", "text": "Bitcoin: Un Sistema de Efectivo Electr\u00f3nico Usuario-a-Usuario\nSatoshi Nakamoto\nsatoshin@gmx.com\nwww.bitcoin.org\nTraducido al Espa\u00f1ol de bitcoin.org/bitcoin.pdf\npor Angel Le\u00f3n - www.diariobitcoin.com\nAbstracto. Una versi\u00f3n puramente electr\u00f3nica de efectivo permitir\u00eda que los pagos\nen l\u00ednea fuesen enviados directamente de un ente a otro sin tener que pasar por\nmedio de una instituci\u00f3n financiera. Firmas digitales proveen parte de la soluci\u00f3n,\npero los beneficios principales se pierden si existe un tercero confiable para prevenir\nel doble-gasto. Proponemos una soluci\u00f3n al problema del doble gasto utilizando una\nred usuario-a-usuario. La red coloca estampas de tiempo a las transacciones al crear\nun hash de las mismas en una cadena continua de pruebas de trabajo basadas en\nhashes, formando un registro que no puede ser cambiado sin volver a recrear la\nprueba de trabajo. La cadena m\u00e1s larga no solo sirve como la prueba de la secuencia\nde los eventos testificados, sino como prueba de que vino del gremio de poder de\nprocesamiento  de  CPU  m\u00e1s  grande.  Siempre  que  la  mayor\u00eda  del  poder  de\nprocesamiento de CPU est\u00e9 bajo el control de los nodos que no cooperan para atacar\nla red, estos generar\u00e1n la cadena m\u00e1s larga y le llevar\u00e1n la ventaja a los atacantes.\nLa red en s\u00ed misma requiere una estructura m\u00ednima. Los mensajes son enviados bajo\nla base de mejor esfuerzo, y los nodos pueden irse y volver a unirse a la red como les\nparezca, aceptando la cadena de prueba de trabajo de lo que sucedi\u00f3 durante su\nausencia.\n1.    Introducci\u00f3n \nEl comercio en el Internet ha venido a depender exclusivamente de instituciones financieras las\ncuales sirven como terceros confiables para el procesamiento de pagos electr\u00f3nicos. Mientras que\nel sistema funciona lo suficientemente bien para la mayor\u00eda de las transacciones, a\u00fan sufre de las\ndebilidades  inherentes  del  modelo  basado  en  confianza.  Transacciones  completamente  no-\nrevertibles no son realmente posibles, dado que las instituciones financieras no pueden evitar\nmediar disputas. El costo de la mediaci\u00f3n incrementa costos de transacci\u00f3n, limitando el tama\u00f1o\nm\u00ednimo pr\u00e1ctico por transacci\u00f3n y eliminando la posibilidad de peque\u00f1as transacciones casuales,\ny hay un costo m\u00e1s amplio en la p\u00e9rdida de la habilidad de hacer pagos no-reversibles por\nservicios no-reversibles. Con la posibilidad de revertir, la necesidad de confianza se expande. Los\ncomerciantes deben tener cuidado de sus clientes, molest\u00e1ndolos pidiendo m\u00e1s informaci\u00f3n de la\nque se necesitar\u00eda de otro modo. Un cierto porcentaje de fraude es aceptable como inevitable.\nEstos costos e incertidumbres de pagos pueden ser evitadas en persona utilizando dinero f\u00edsico,\npero no existe un mecanismo para hacer pagos por un canal de comunicaci\u00f3n sin un tercero\nconfiable.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "58abc7aa-8b7a-44fc-957f-72bc95961353": {"__data__": {"id_": "58abc7aa-8b7a-44fc-957f-72bc95961353", "embedding": null, "metadata": {"page_label": "1", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e96ceede-de26-414f-b42b-199834d0c6b5", "node_type": null, "metadata": {"page_label": "1", "file_name": "bitcoin_es_latam.pdf"}, "hash": "5b3827f918707ee1e2e5a1953ff335d8ab9b4b16caaeafd51521768f722bc8ff"}, "2": {"node_id": "6d8d23f3-b908-4cae-9816-1e3fe5718c47", "node_type": null, "metadata": {"page_label": "1", "file_name": "bitcoin_es_latam.pdf"}, "hash": "5fddd8a1c88ca95d692cae4ecf1472abdec691786592cc40dfbb5a68a2907b40"}}, "hash": "8b32d72e22d83e478e0f9ac43bfd8f3d9b1ce89f4a01c7ac20e445761d172d1e", "text": "Lo que se necesita es un sistema de pagos electr\u00f3nicos basado en pruebas criptogr\u00e1ficas en\nvez de confianza, permiti\u00e9ndole a dos partes interesadas en realizar transacciones directamente\nsin la necesidad de un tercero confiable. Las transacciones que son computacionalmente poco\nfactibles de revertir proteger\u00edan  a los vendedores  de fraude,  y mecanismos de dep\u00f3sitos  de\nfideicomisos de rutina podr\u00edan ser f\u00e1cilmente implementados para proteger a los compradores. En\neste trabajo, proponemos una soluci\u00f3n al problema del doble-gasto utilizando un servidor de\nmarcas de tiempo usuario-a-usuario distribuido para generar una prueba computacional del orden\ncronol\u00f3gico de las transacciones. El sistema es seguro mientras que nodos honestos controlen\ncolectivamente m\u00e1s poder de procesamiento (CPU) que cualquier grupo de nodos atacantes en\ncooperaci\u00f3n.\n1", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "15b62da5-a524-49ce-926a-ae7ded71c855": {"__data__": {"id_": "15b62da5-a524-49ce-926a-ae7ded71c855", "embedding": null, "metadata": {"page_label": "2", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "947d471c-5de6-42c7-ae03-9c9e0d82e0e7", "node_type": null, "metadata": {"page_label": "2", "file_name": "bitcoin_es_latam.pdf"}, "hash": "0e5c30f248bb6a10e3d2cdc5df784e45dccb37e6f875a16cc0a14d2e1e67ccb4"}, "3": {"node_id": "9b4140fe-f35b-46c7-809c-5fe3c9a996bc", "node_type": null, "metadata": {"page_label": "2", "file_name": "bitcoin_es_latam.pdf"}, "hash": "db6799cefa9feeaa60edc58cae9447df31d849a5e420732f3243a9158c1140b0"}}, "hash": "acebf133a47c840fae5a4504bf00cb9b39317954e480fb29a11057c5c25b6ad0", "text": "2.    Transacciones\nDefinimos una moneda electr\u00f3nica como una cadena de firmas digitales. Cada due\u00f1o transfiere la\nmoneda al pr\u00f3ximo al firmar digitalmente un hash de la transacci\u00f3n previa y la clave publica del\npr\u00f3ximo due\u00f1o y agregando estos al final de la moneda. Un beneficiario puede verificar las\nfirmas para verificar la cadena de propiedad.\nEl problema claro es que el beneficiario no puede verificar si uno de los due\u00f1os no se hizo un\ndoble-gasto de la moneda. Una soluci\u00f3n com\u00fan es introducir una autoridad central confiable, o\ncasa  de  moneda,  que  revisa  cada  si  cada  transacci\u00f3n  tiene  doble-gasto.  Despu\u00e9s  de  cada\ntransacci\u00f3n, la moneda debe ser regresada a la casa de moneda para generar una nueva moneda, y\nsolo las monedas generadas directamente de la casa de moneda son las que se conf\u00edan de no tener\ndoble-gasto.  El problema con  esta  soluci\u00f3n es que el destino del  sistema monetario entero\ndepende de la compa\u00f1\u00eda que gestiona la casa de moneda, con cada transacci\u00f3n teniendo que pasar\npor ellos, tal como un banco.\nNecesitamos una forma para que el beneficiario pueda saber que los due\u00f1os previos no\nfirmaron ningunas transacciones m\u00e1s tempranas. Para nuestros prop\u00f3sitos, la transacci\u00f3n m\u00e1s\ntemprana es la que cuenta, as\u00ed que no nos importan otros intentos de doble-gasto m\u00e1s tarde. La\n\u00fanica  forma  de confirmar  la  ausencia  de  una  transacci\u00f3n  es  estando  al  tanto  de todas  las\ntransacciones. En el modelo de la casa de moneda, la casa de moneda estaba al tanto de todas las\ntransacciones y esta decidir\u00eda cuales llegaban primero. Para lograr esto sin un tercero confiable,\nlas  transacciones  deben  ser  anunciadas  p\u00fablicamente  [1],  y  necesitamos  un  sistema  de\nparticipantes que est\u00e9n de acuerdo con una historia \u00fanica del orden en que estas fueron recibidas.\nEl beneficiario necesita prueba de que a la hora de cada transacci\u00f3n, la mayor\u00eda de los nodos\nestuvieron de acuerdo que esta fue la primera que se recibi\u00f3.\n3.    Servidor de marcas de tiempo.\nLa soluci\u00f3n que proponemos comienza con un servidor de marcas de tiempo. Un servidor de\nmarcas de tiempo funciona  al tomar un hash de un bloque de elementos  a ser fechados y\npublicando ampliamente el hash, tal como en un peri\u00f3dico, o una publicaci\u00f3n Usenet [2-5]. La\nmarca de tiempo prueba que la data debe haber existido en el tiempo, obviamente, para meterse\ndentro del hash. Cada marca de tiempo incluye la marca de tiempo previa en su hash, formando\nuna cadena, con cada marca de tiempo adicional reforzando las anteriores a esa.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "9b4140fe-f35b-46c7-809c-5fe3c9a996bc": {"__data__": {"id_": "9b4140fe-f35b-46c7-809c-5fe3c9a996bc", "embedding": null, "metadata": {"page_label": "2", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "947d471c-5de6-42c7-ae03-9c9e0d82e0e7", "node_type": null, "metadata": {"page_label": "2", "file_name": "bitcoin_es_latam.pdf"}, "hash": "0e5c30f248bb6a10e3d2cdc5df784e45dccb37e6f875a16cc0a14d2e1e67ccb4"}, "2": {"node_id": "15b62da5-a524-49ce-926a-ae7ded71c855", "node_type": null, "metadata": {"page_label": "2", "file_name": "bitcoin_es_latam.pdf"}, "hash": "acebf133a47c840fae5a4504bf00cb9b39317954e480fb29a11057c5c25b6ad0"}}, "hash": "db6799cefa9feeaa60edc58cae9447df31d849a5e420732f3243a9158c1140b0", "text": "2Bloque\nElementoElemento...Hash\nBloque\nElementoElemento...HashTransacci\u00f3n\nClave p\u00fablicadel Due\u00f1o 1\nFirma delDue\u00f1o 0HashTransacci\u00f3n\nClave p\u00fablicadel Due\u00f1o 2\nFirma delDue\u00f1o 1Hash\n Transacci\u00f3n\nClave p\u00fabicadel Due\u00f1o 3\nFirma delDue\u00f1o 2Hash\n Verificar\nClave privadadel Due\u00f1o 2Clave privadadel Due\u00f1o 1  Firmar  \nClave privadadel Due\u00f1o 3Verificar\nFirmar", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "19666e36-e38d-4091-b581-94485b534af7": {"__data__": {"id_": "19666e36-e38d-4091-b581-94485b534af7", "embedding": null, "metadata": {"page_label": "3", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d00b7eba-d864-405f-ade5-3390a405f762", "node_type": null, "metadata": {"page_label": "3", "file_name": "bitcoin_es_latam.pdf"}, "hash": "072438ab1f990a3a94bc57999454fcb7e4a2bea9bd2f7f0ffac0d306557a3645"}, "3": {"node_id": "a9244bac-9166-4f94-a43c-9032f1a1890b", "node_type": null, "metadata": {"page_label": "3", "file_name": "bitcoin_es_latam.pdf"}, "hash": "c3e169439d90ee9e04c1407ab90acc9a73792aa8b2499a95abc8f2e5c1a2f694"}}, "hash": "e26d7e99f695d2489a5506fb93c835c155dce1e9afcdc7cfb846913952c2d21d", "text": "4.    Prueba-de-trabajo\nPara implementar un servidor de marcas de tiempo en una base usuario-a-usuario, necesitaremos\nutilizar un sistema de prueba-de-trabajo similar al Hashcash de Adam Back [6], en vez de un\nperi\u00f3dico o una publicaci\u00f3n en Usenet. La prueba-de-trabajo envuelve la exploraci\u00f3n de un valor\nque al calcular un hash, tal como SHA-256, el hash empiece con un n\u00famero de bits en cero. El\ntrabajo promedio requerido es exponencial en el n\u00famero de bits puestos en cero requeridos y\npuede ser verificado ejecutando un solo hash.\nPara nuestra red de marcas de tiempo, implementamos la prueba-de-trabajo incrementando un\nnonce en el bloque hasta que un valor es encontrado que de el n\u00famero requerido de bits en cero\npara el hash del bloque. Una vez que el esfuerzo de CPU se ha gastado para satisfacer la prueba-\nde-trabajo, el bloque no puede ser cambiado sin rehacer todo el trabajo. A medida que m\u00e1s\nbloques son encadenados despu\u00e9s de este, el trabajo para cambiar el bloque incluir\u00eda rehacer\ntodos los bloques despu\u00e9s de este.\nLa prueba-de-trabajo tambi\u00e9n resuelve el problema de determinar la representaci\u00f3n en cuanto a\ndecisi\u00f3n  por  mayor\u00eda.  Si  la  mayor\u00eda  fuese  basada  en  un voto  por  direcci\u00f3n  IP ,  podr\u00eda  ser\nsubvertida por alguien capaz de asignar muchos IPs. Prueba-de-trabajo es esencialmente un-\nCPU-un-voto. La decisi\u00f3n de la mayor\u00eda es representada por la cadena m\u00e1s larga, la cual tiene la\nprueba-de-trabajo de mayor esfuerzo invertido en ella.  Si la mayor\u00eda del poder de CPU es\ncontrolada por nodos honestos, la cadena honesta crecer\u00e1 m\u00e1s r\u00e1pido y pasar\u00e1 cualquier cadena\nque est\u00e9 compitiendo. Para modificar un bloque en el pasado, un atacante tendr\u00eda que rehacer la\nprueba-de-trabajo del bloque y de todos los bloques despu\u00e9s y luego alcanzar y pasar el trabajo\nde los nodos honestos. Luego demostraremos que la probabilidad de un atacante m\u00e1s lento de\nalcanzar disminuye exponencialmente a medida que bloques subsecuentes son a\u00f1adidos.\nPara compensar por el incremento de velocidad de hardware y en el inter\u00e9s variante de corre\nnodos en el tiempo, la dificultad de la prueba-de-trabajo es determinada por una media m\u00f3vil\ndirigida a un n\u00famero promedio de bloques por hora. Si estos se generan muy r\u00e1pido, la dificultad\nincrementa.\n5.    La Red\nLos pasos para gestionar la red son como sigue:\n1)Transacciones nuevas son emitidas a todos los nodos.\n2)Cada nodo recolecta nuevas transacciones en un bloque.\n3)Cada nodo trabaja en encontrar una prueba-de-trabajo dif\u00edcil para su bloque.\n4)Cuando un nodo encuentra una prueba-de-trabajo, emite el bloque a todos los nodos.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "a9244bac-9166-4f94-a43c-9032f1a1890b": {"__data__": {"id_": "a9244bac-9166-4f94-a43c-9032f1a1890b", "embedding": null, "metadata": {"page_label": "3", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d00b7eba-d864-405f-ade5-3390a405f762", "node_type": null, "metadata": {"page_label": "3", "file_name": "bitcoin_es_latam.pdf"}, "hash": "072438ab1f990a3a94bc57999454fcb7e4a2bea9bd2f7f0ffac0d306557a3645"}, "2": {"node_id": "19666e36-e38d-4091-b581-94485b534af7", "node_type": null, "metadata": {"page_label": "3", "file_name": "bitcoin_es_latam.pdf"}, "hash": "e26d7e99f695d2489a5506fb93c835c155dce1e9afcdc7cfb846913952c2d21d"}}, "hash": "c3e169439d90ee9e04c1407ab90acc9a73792aa8b2499a95abc8f2e5c1a2f694", "text": "5)Los nodos aceptan el bloque si todas las transacciones en el bloque son v\u00e1lidas y no se han\ngastado ya.\n6)Los nodos expresan su aceptaci\u00f3n del bloque al trabajar en crear el pr\u00f3ximo bloque en la\ncadena, utilizando el hash del bloque aceptado como el hash previo.\nLos nodos siempre consideran la cadena m\u00e1s larga como la correcta y empiezan a trabajar en\nextenderla.  Si  dos  nodos  emiten  versiones  diferentes  del  pr\u00f3ximo  bloque  simult\u00e1neamente,\nalgunos nodos puede que reciban uno o el otro primero. En ese caso, trabajan en el primero que\nreciban pero guardan la otra rama en caso de que esta se vuelva m\u00e1s larga. El empate se rompe\ncuando la pr\u00f3xima prueba-de-trabajo es encontrada y una rama se vuelve m\u00e1s larga; los nodos\nque estaban trabajando en la otra rama luego se cambian a la m\u00e1s larga.\n3Bloque\nHash PrevioNonce\nTxTx...Bloque\nHash PrevioNonce\nTxTx...", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "0ca9667f-d887-49c7-8e61-48a9f09d2928": {"__data__": {"id_": "0ca9667f-d887-49c7-8e61-48a9f09d2928", "embedding": null, "metadata": {"page_label": "4", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "feff5b31-ab33-4b56-b67c-fd9463c55b7e", "node_type": null, "metadata": {"page_label": "4", "file_name": "bitcoin_es_latam.pdf"}, "hash": "780de3960a448c73b8c7fdf999eda52b51b46dca622d5125254c8901cc1edf25"}, "3": {"node_id": "332850a3-e694-40eb-a9f4-29370fb870ee", "node_type": null, "metadata": {"page_label": "4", "file_name": "bitcoin_es_latam.pdf"}, "hash": "15dcae45091fd32781fb7b3634795fbe438baed395e7453f95aebeb525b7b792"}}, "hash": "b8e26e692888d7e10e943c8cb0f266f7a2cc088c3b9bbb8536386b5692be44c7", "text": "Las emisiones de nuevas transacciones no necesariamente necesitan llegar a todos los nodos.\nTanto estas lleguen a muchos nodos, entrar\u00e1n a un bloque antes de que pase mucho tiempo. Las\nemisiones de bloques tambi\u00e9n son tolerantes a mensajes perdidos. Si un nodo no recibe un\nbloque, lo va a pedir cuando reciba el pr\u00f3ximo bloque y se de cuenta que se perdi\u00f3 uno.\n6.    Incentivo\nPor convenci\u00f3n, la primera transacci\u00f3n en el bloque es una transacci\u00f3n especial que comienza\nuna moneda nueva cuyo due\u00f1o es el creador del bloque. Esto agrega un incentivo para que los\nnodos apoyen a la red, y provee una forma inicial de distribuir monedas en circulaci\u00f3n, dado que\nno hay una autoridad para crearlas. Esta adici\u00f3n estable de una cantidad constante de monedas\nnuevas es an\u00e1loga a mineros de oro gastando recursos para agregar oro a la circulaci\u00f3n. En\nnuestro caso, es el tiempo del CPU y la electricidad que se gasta.\nEl incentivo tambi\u00e9n puede ser fundado con costos de transacci\u00f3n. Si el valor de salida de una\ntransacci\u00f3n es menor que la entrada, la diferencia es una tarifa de transacci\u00f3n que se le a\u00f1ade al\nvalor  de  incentivo  del  bloque  que  contiene  la  transacci\u00f3n.  Una  vez  que  un  n\u00famero\npredeterminado  de  monedas  han  entrado  en  circulaci\u00f3n,  el  incentivo  puede  transicionar\nenteramente a tarifas de transacci\u00f3n y ser completamente libre de inflaci\u00f3n.\nEl incentivo puede ayudar a animar a los nodos a mantenerse honestos. Si un atacante ego\u00edsta\nes capaz de reunir m\u00e1s potencia de CPU que todos los nodos honestos, este tendr\u00eda que elegir\nentre utilizarla para defraudar a la gente robando sus pagos de vuelta, o en utilizarla para generar\nmonedas nuevas. Deber\u00eda encontrar m\u00e1s rentable jugar por las reglas, tales regla lo favorecen a el\ncon m\u00e1s monedas que a todos los dem\u00e1s combinados, que socavar el sistema y la validez de su\npropia riqueza.\n7.    Reclamando Espacio en Disco\nUna vez que la \u00faltima transacci\u00f3n en una moneda es enterrada bajo suficientes bloques, las\ntransacciones gastadas antes de estas pueden ser descartadas para ahorrar espacio en disco. Para\nfacilitar esto sin romper el hash del bloque, las transacciones se les comprueba en un \u00e1rbol\nMerkle [7] [2] [5], con la \u00fanica ra\u00edz incluida en el hash el bloque. Los bloques viejos pueden ser\ncompactados al sacar ramas del \u00e1rbol. Los hashes interiores no necesitan ser guardados.\nLa cabecera de un bloque sin transacciones ser\u00eda de unos 80 bytes. Si suponemos que cada\nbloque  es  generado  cada  10  minutos,  80  bytes  *  6  *  24  *  365  =  4.2MB  por  a\u00f1o.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "332850a3-e694-40eb-a9f4-29370fb870ee": {"__data__": {"id_": "332850a3-e694-40eb-a9f4-29370fb870ee", "embedding": null, "metadata": {"page_label": "4", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "feff5b31-ab33-4b56-b67c-fd9463c55b7e", "node_type": null, "metadata": {"page_label": "4", "file_name": "bitcoin_es_latam.pdf"}, "hash": "780de3960a448c73b8c7fdf999eda52b51b46dca622d5125254c8901cc1edf25"}, "2": {"node_id": "0ca9667f-d887-49c7-8e61-48a9f09d2928", "node_type": null, "metadata": {"page_label": "4", "file_name": "bitcoin_es_latam.pdf"}, "hash": "b8e26e692888d7e10e943c8cb0f266f7a2cc088c3b9bbb8536386b5692be44c7"}}, "hash": "15dcae45091fd32781fb7b3634795fbe438baed395e7453f95aebeb525b7b792", "text": "Con\ncomputadoras generalmente vendi\u00e9ndose con 2GB de RAM para el 2008, y la ley de Moore\nprediciendo el crecimiento actual de 1.2GB por a\u00f1o, el almacenamiento no debe ser un problema\naun si las cabeceras de los bloques deben permanecer en memoria.\n4Bloque BloqueCabecera de Bloque (Hash del Bloque)\nHash PrevioNonce\nHash01\nHash0Hash1Hash2Hash3Hash23Hash Raiz\nHash01\nHash2\nTx3Hash23Cabecera de Bloque (Hash del Bloque)\nHash Raiz\nTransacciones Hasheadas en un \u00e1rbol Merkle Despu\u00e9s de podar Tx0-2 del BloqueHash PrevioNonce\nHash3\nTx0Tx1Tx2Tx3", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f406afed-9084-408e-a45e-56ca5cb7c8ac": {"__data__": {"id_": "f406afed-9084-408e-a45e-56ca5cb7c8ac", "embedding": null, "metadata": {"page_label": "5", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "76efe84c-7f88-401d-9c5e-725d5621fd52", "node_type": null, "metadata": {"page_label": "5", "file_name": "bitcoin_es_latam.pdf"}, "hash": "911b78089cd1071fed64dbbb01c125e57938006d0fe9a6c7b513f4e9a27eb43b"}}, "hash": "911b78089cd1071fed64dbbb01c125e57938006d0fe9a6c7b513f4e9a27eb43b", "text": "8.    Verificaci\u00f3n de Pagos Simplificada\nEs posible verificar pagos sin correr un nodo de red completo. Un usuario solo necesita mantener\nuna copia de las cabeceras de los bloques de la cadena m\u00e1s larga de prueba-de-trabajo, la cual\npuede obtener haciendo una b\u00fasqueda en los nodos de red hasta que est\u00e9 convencido que tenga la\ncadena m\u00e1s larga, y obtenga la rama Merkle que enlaza la transacci\u00f3n al bloque en que ha sido\nfechado. No puede verificar la transacci\u00f3n por s\u00ed mismo, pero al enlazarla a un lugar en la cadena,\nahora puede ver que un nodo de la red la ha aceptado y los bloques a\u00f1adidos despu\u00e9s confirman\na\u00fan m\u00e1s que la red lo ha aceptado.\nComo tal, la verificaci\u00f3n es confiable a medida que nodos honestos controlen la red, pero es\nm\u00e1s vulnerable si la red es dominada por un atacante. Mientras que los nodos de la red puedan\nverificar  transacciones  por  si  mismos,  el  m\u00e9todo  simplificado  puede  ser  enga\u00f1ado  por  las\ntransacciones fabricadas de un atacante hasta que el atacante pueda continuar dominando la red.\nUna estrategia para protegerse de esto es aceptar alertas de los nodos de la red cuando detecten un\nbloque  inv\u00e1lido,  pidi\u00e9ndole  al  usuario  que  se  baje  el  bloque  completo  y  las  transacciones\nalertadas para confirmar la inconsistencia. Los negocios que reciban pagos frecuentes van a\nquerer correr sus propios nodos para seguridad m\u00e1s independiente y verificaci\u00f3n m\u00e1s r\u00e1pida.\n9.    Combinando y Dividiendo Valor\nAunque ser\u00eda posible manipular monedas individualmente, seria dif\u00edcil de manejar el hacer una\ntransacci\u00f3n por cada centavo en una transferencia. Para permitir que el valor se divida y se\ncombine, las transacciones contienen m\u00faltiples entradas y salidas. Normalmente habr\u00e1n o una\nsola entrada de una transacci\u00f3n previa m\u00e1s grande o m\u00faltiples entradas combinando cantidades\nm\u00e1s peque\u00f1as, y al menos dos salidas: una para el pago, y una para devolver el cambio, si es que\nhay alg\u00fan cambio, de vuelta al emisor.\nDebe  ser  notado  que  donde  una  transacci\u00f3n  depende   de  varias  transacciones,  y  esas\ntransacciones dependen en muchas m\u00e1s, no hay ning\u00fan problema. Nunca existe la necesidad de\nextraer una copia completa de la transacci\u00f3n por si sola de la historia de transacciones.\n5Hash01\nHash2Hash3Hash23Cabecera del Bloque\nRaiz MerkleHash PrevioNonceCabecera del Bloque\nRaiz MerkleHash PrevioNonceCabecera del Bloque\nRaiz MerkleHash PrevioNonce\nRama Merkle para Tx3La Cadena m\u00e1s larga de Prueba-de-trabajo\nTx3\nTransacci\u00f3n", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6a81c1e3-7015-4838-b92e-7ba2daddc7b6": {"__data__": {"id_": "6a81c1e3-7015-4838-b92e-7ba2daddc7b6", "embedding": null, "metadata": {"page_label": "6", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "81a8913c-822e-4e79-8833-2f5b08316522", "node_type": null, "metadata": {"page_label": "6", "file_name": "bitcoin_es_latam.pdf"}, "hash": "358499806da840bc697aa13c04d5dd180bff4c0d18cda3ad5b61528398b9e814"}, "3": {"node_id": "e3050b62-88fe-4864-a8cf-c7a4991221d0", "node_type": null, "metadata": {"page_label": "6", "file_name": "bitcoin_es_latam.pdf"}, "hash": "29400cc359fa35b0257a60612a8979b62f3bb4527068624e40ab743987b8e793"}}, "hash": "514cd38012deadf63c4957eaab4d29f499e381fcd1e8d586deecad9f6c36fa27", "text": "10.    Privacidad\nEl modelo bancario tradicional logra un nivel de privacidad al limitar el acceso a la informaci\u00f3n\nde las partes envueltas y del tercero confiado. La necesidad de anunciar todas las transacciones\np\u00fablicamente se opone a este m\u00e9todo, pero la privacidad a\u00fan puede ser mantenida al romper el\nflujo de la informaci\u00f3n en otro lugar: al mantener las claves p\u00fablicas an\u00f3nimas. El p\u00fablico puede\nver que alguien est\u00e1 enviando una cantidad a otra persona, pero sin informaci\u00f3n que relacione la\ntransacci\u00f3n a ninguna persona. Esto es similar al nivel de informaci\u00f3n mostrado por las bolsas de\nvalores, donde el tiempo y el tama\u00f1o de las transacciones individuales, la \u201ccinta\u201d, es p\u00fablico,\npero sin decir quienes son las partes.\nComo  un  cortafuegos  adicional,  un  par  nuevo  de  claves  debe  ser  utilizado  para  cada\ntransacci\u00f3n de modo que puedan ser asociadas a un due\u00f1o en com\u00fan. Alg\u00fan tipo de asociaci\u00f3n es\ninevitable con transacciones de m\u00faltiples entradas, las cuales pueden revelar que sus entradas\nfueron apropiadas por el mismo due\u00f1o. El riesgo est\u00e1 en que si el due\u00f1o de una clave es revelado,\nel enlazado podr\u00eda revelar otras transacciones que pertenecieron al mismo due\u00f1o.\n11.    C\u00e1lculos\nConsideramos el escenario en el que un atacante intenta generar una cadena alterna m\u00e1s r\u00e1pido\nque la cadena honesta. A\u00fan si esto es logrado, esto no abre el sistema a cambios arbitrarios, tal\ncomo crear valor del aire o tomar dinero que nunca le perteneci\u00f3 al atacante. Los nodos no\naceptar\u00edan una transacci\u00f3n inv\u00e1lida como pago, y los nodos honestos nunca aceptar\u00e1 un bloque\nque  las  contenga.  Un  atacante  puede  \u00fanicamente  intentar  cambiar  solo  una  de sus  propias\ntransacciones para retomar dinero que ha gastado recientemente.\nLa carrera entre una cadena honesta y la cadena de un atacante puede ser caracterizada como\nuna Caminata Aleatoria Binomial. El evento de \u00e9xito es la cadena honesta siendo extendida por\nun bloque, incrementar esta ventaja por +1, y el evento de fracaso es la cadena del atacante\nsiendo extendida por un bloque reduciendo la distancia por -1.\nLa probabilidad de que un atacante pueda alcanzar desde un d\u00e9ficit dado es  an\u00e1logo al\nproblema de la Ruina del Apostador. Sup\u00f3ngase que un apostador con cr\u00e9dito ilimitado empieza\nen un d\u00e9ficit y juega potencialmente un n\u00famero infinito de intentos para intentar llegar a un punto\nde equilibrio.", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "e3050b62-88fe-4864-a8cf-c7a4991221d0": {"__data__": {"id_": "e3050b62-88fe-4864-a8cf-c7a4991221d0", "embedding": null, "metadata": {"page_label": "6", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "81a8913c-822e-4e79-8833-2f5b08316522", "node_type": null, "metadata": {"page_label": "6", "file_name": "bitcoin_es_latam.pdf"}, "hash": "358499806da840bc697aa13c04d5dd180bff4c0d18cda3ad5b61528398b9e814"}, "2": {"node_id": "6a81c1e3-7015-4838-b92e-7ba2daddc7b6", "node_type": null, "metadata": {"page_label": "6", "file_name": "bitcoin_es_latam.pdf"}, "hash": "514cd38012deadf63c4957eaab4d29f499e381fcd1e8d586deecad9f6c36fa27"}}, "hash": "29400cc359fa35b0257a60612a8979b62f3bb4527068624e40ab743987b8e793", "text": "Podemos calcular la probabilidad de que  llegase al punto de equilibrio, o que un\natacante llegue a alcanzar a la cadena honesta, como sigue [8]:\np = probabilidad de que un nodo honesto encuentre el pr\u00f3ximo bloque\nq = probabilidad de que el atacante encuentre el pr\u00f3ximo bloque\nqz = probabilidad de que el atacante llegue a alcanzar desde z bloques atr\u00e1s.\n6IdentidadesTransaccionesTerceroConfiableContraparteP\u00fablico\nIdentidadesTransaccionesP\u00fablicoNuevo Modelo de PrivacidadlModelo de Privacidad Tradicional\nqz={1ifp\u2264q\n\ue09eq/p\ue09fzifp\ue085q}", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "ddfe2e85-6094-44e2-9422-94a455ac2cdb": {"__data__": {"id_": "ddfe2e85-6094-44e2-9422-94a455ac2cdb", "embedding": null, "metadata": {"page_label": "7", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a94fec68-88fe-4283-85af-69ff58f97124", "node_type": null, "metadata": {"page_label": "7", "file_name": "bitcoin_es_latam.pdf"}, "hash": "d8c880517f7e75440b0217e580bb116ce02718e11117b81c92278e342454fd95"}}, "hash": "d8c880517f7e75440b0217e580bb116ce02718e11117b81c92278e342454fd95", "text": "Dada nuestra hip\u00f3tesis de que p > q, la probabilidad cae exponencialmente mientras que el\nn\u00famero de bloques el cual el atacante debe alcanzar incrementa. Con las probabilidades en\ncontra,  si  no  hace  una  estocada  afortunada  desde  el  principio,  sus  chances  se  vuelven\nextremadamente peque\u00f1os a medida que se queda m\u00e1s atr\u00e1s.\nAhora consideramos cu\u00e1nto necesita esperar el recipiente de una nueva transacci\u00f3n antes de\ntener la certeza suficiente de que el emisor no puede cambiar la transacci\u00f3n. Asumimos que el\nemisor es un atacante el cual quiere hacerle creer al recipiente que le pag\u00f3 durante un rato, luego\ncambiar la transacci\u00f3n para pagarse de vuelta a s\u00ed mismo una vez que ha pasado un tiempo. El\nreceptor ser\u00e1 alertado cuando esto suceda, pero el emisor espera que sea demasiado tarde.\nEl receptor genera una nuevo par de claves y entrega la clave p\u00fablica al emisor poco despu\u00e9s\nde hacer la firma. Esto previene que el emisor prepare una cadena de bloques antes de tiempo al\ntrabajar continuamente hasta que tenga la suerte de adelantarse lo suficiente, y luego ejecutar la\ntransacci\u00f3n  en ese momento.  Una  vez  que la transacci\u00f3n  es  enviada,  el emisor  deshonesto\nempieza a trabajar en secreto en una cadena paralela que contiene una versi\u00f3n alterna de su\ntransacci\u00f3n.\nEl recipiente espera a que la transacci\u00f3n sea a\u00f1adida al bloque y z bloques han sido enlazados\ndespu\u00e9s de la transacci\u00f3n. El no necesita saber la cantidad exacta de progreso que al atacante ha\nlogrado, pero asumiendo que los bloques honestos se tardaron el promedio esperado por bloque,\nel progreso potencial del atacante ser\u00e1 una distribuci\u00f3n de Poisson con un valor esperado:\nPara obtener la probabilidad de que el atacante a\u00fan pueda alcanzar ahora, multiplicamos la\ndensidad de Poisson por cada cantidad de progreso que pudo haber hecho por la probabilidad de\nque pudo alcanzar desde ese punto:\nRe-organizamos para evitar la suma de la cola infinita de la distribuci\u00f3n...\nConvertimos a c\u00f3digo en C...\n7\ue0c1=zq\np\n\u2211k=0\u221e\ue0c1ke\u2212\ue0c1\nk!\u22c5{\ue09eq/p\ue09f\ue09ez\u2212k\ue09fif k\u2264z\n1if k\ue085z}\n1\u2212\u2211\nk=0z\ue0c1ke\u2212\ue0c1\nk!\ue09e1\u2212\ue09eq/p\ue09f\ue09ez\u2212k\ue09f\ue09f\n#include <math.h>double AttackerSuccessProbability(double q, int z){    double p = 1.0 - q;    double lambda = z * (q / p);    double sum = 1.0;    int i, k;    for (k = 0; k <= z; k++)    {        double poisson = exp(-lambda);        for (i = 1; i <= k; i++)            poisson *= lambda / i;        sum -= poisson * (1 - pow(q / p, z - k));    }    return sum;}", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "92791559-6a71-4111-9529-d76a113e40b7": {"__data__": {"id_": "92791559-6a71-4111-9529-d76a113e40b7", "embedding": null, "metadata": {"page_label": "8", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2507bfa-de06-4c44-afb4-49c78ecd4ec6", "node_type": null, "metadata": {"page_label": "8", "file_name": "bitcoin_es_latam.pdf"}, "hash": "5fe807fd8363ef32adf3244e093859652bdfcc4d2483471ae3eba43d87b3d59f"}}, "hash": "5fe807fd8363ef32adf3244e093859652bdfcc4d2483471ae3eba43d87b3d59f", "text": "Ejecutamos algunos resultados, podemos ver que la probabilidad cae exponencialmente con z.\nResolvemos para P menor que 0.1%...\n12.    Conclusi\u00f3n\nHemos  propuesto  un  sistema  para  transacciones  electr\u00f3nicas  sin  depender  en  confianza.\nComenzamos con el marco habitual de monedas hechas de firmas digitales, el cual provee un\ncontrol fuerte de propiedad, pero es incompleto sino existe una forma de prevenir doble-gasto.\nPara solucionar esto, hemos propuesto una red usuario-a-usuario que utiliza prueba-de-trabajo\npara registrar una historia p\u00fablica de transacciones la cual r\u00e1pidamente se convierte impr\u00e1ctica\ncomputacionalmente para que un atacante pueda cambiar si nodos honestos controlan la mayor\u00eda\ndel poder de CPU. La red es robusta en su simplicidad no estructurada. Los nodos pueden\ntrabajar todos al mismo tiempo con poca coordinaci\u00f3n. No necesitan ser identificados, dado que\nlos mensajes no son enrutados a ning\u00fan lugar en particular y solo necesitan ser entregados bajo la\nbase de un mejor esfuerzo. Los nodos pueden irse y volver a la red a voluntad, aceptando la\ncadena de prueba-de-trabajo como prueba de lo que sucedi\u00f3 mientras estuvieron ausentes. V otan\ncon su poder de CPU, expresando su aceptaci\u00f3n de los bloques v\u00e1lidos al trabajar extendi\u00e9ndose\ny  rechazando  bloques  inv\u00e1lidos  al  refutar  trabajar  en  ellos.  Cualquier  reglas  necesarias  e\nincentivos se pueden hacer cumplir con este mecanismo de consenso.\n8q=0.1z=0    P=1.0000000z=1    P=0.2045873z=2    P=0.0509779z=3    P=0.0131722z=4    P=0.0034552z=5    P=0.0009137z=6    P=0.0002428z=7    P=0.0000647z=8    P=0.0000173z=9    P=0.0000046z=10   P=0.0000012\nq=0.3z=0    P=1.0000000z=5    P=0.1773523z=10   P=0.0416605z=15   P=0.0101008z=20   P=0.0024804z=25   P=0.0006132z=30   P=0.0001522z=35   P=0.0000379z=40   P=0.0000095z=45   P=0.0000024z=50   P=0.0000006\nP < 0.001q=0.10   z=5q=0.15   z=8q=0.20   z=11q=0.25   z=15q=0.30   z=24q=0.35   z=41q=0.40   z=89q=0.45   z=340", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "3991b84f-fd81-4d6c-9625-363cd2fb1aab": {"__data__": {"id_": "3991b84f-fd81-4d6c-9625-363cd2fb1aab", "embedding": null, "metadata": {"page_label": "9", "file_name": "bitcoin_es_latam.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "819adf5a-5922-4e59-80b1-67a8615496cd", "node_type": null, "metadata": {"page_label": "9", "file_name": "bitcoin_es_latam.pdf"}, "hash": "4e36c9cc996df503dfb180df9e2f17e4aaa142b818769b509ce34ecb3d8d127d"}}, "hash": "4e36c9cc996df503dfb180df9e2f17e4aaa142b818769b509ce34ecb3d8d127d", "text": "Referencias\n[1]W. Dai, \"b-money,\" http://www.weidai.com/bmoney.txt, 1998. \n[2]H. Massias, X.S. Avila, and J.-J. Quisquater, \"Design of a secure timestamping service with minimal \ntrust requirements,\" In 20th Symposium on Information Theory in the Benelux , May 1999. \n[3]S. Haber, W.S. Stornetta, \"How to time-stamp a digital document,\" In Journal of Cryptology, vol 3, no \n2, pages 99-111, 1991. \n[4]D. Bayer, S. Haber, W.S. Stornetta, \"Improving the efficiency and reliability of digital time-stamping,\"\nIn Sequences II: Methods in Communication, Security and Computer Science , pages 329-334, 1993. \n[5]S. Haber, W.S. Stornetta, \"Secure names for bit-strings,\" In Proceedings of the 4th ACM Conference \non Computer and Communications Security , pages 28-35, April 1997. \n[6]A. Back, \"Hashcash - a denial of service counter-measure,\" \nhttp://www.hashcash.org/papers/hashcash.pdf, 2002. \n[7] R.C. Merkle, \"Protocols for public key cryptosystems,\" In Proc. 1980 Symposium on Security and \nPrivacy, IEEE Computer Society, pages 122-133, April 1980. \n[8]W. Feller, \"An introduction to probability theory and its applications,\" 1957.\n9", "start_char_idx": null, "end_char_idx": null, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"e96ceede-de26-414f-b42b-199834d0c6b5": {"node_ids": ["6d8d23f3-b908-4cae-9816-1e3fe5718c47", "58abc7aa-8b7a-44fc-957f-72bc95961353"], "metadata": {"page_label": "1", "file_name": "bitcoin_es_latam.pdf"}}, "947d471c-5de6-42c7-ae03-9c9e0d82e0e7": {"node_ids": ["15b62da5-a524-49ce-926a-ae7ded71c855", "9b4140fe-f35b-46c7-809c-5fe3c9a996bc"], "metadata": {"page_label": "2", "file_name": "bitcoin_es_latam.pdf"}}, "d00b7eba-d864-405f-ade5-3390a405f762": {"node_ids": ["19666e36-e38d-4091-b581-94485b534af7", "a9244bac-9166-4f94-a43c-9032f1a1890b"], "metadata": {"page_label": "3", "file_name": "bitcoin_es_latam.pdf"}}, "feff5b31-ab33-4b56-b67c-fd9463c55b7e": {"node_ids": ["0ca9667f-d887-49c7-8e61-48a9f09d2928", "332850a3-e694-40eb-a9f4-29370fb870ee"], "metadata": {"page_label": "4", "file_name": "bitcoin_es_latam.pdf"}}, "76efe84c-7f88-401d-9c5e-725d5621fd52": {"node_ids": ["f406afed-9084-408e-a45e-56ca5cb7c8ac"], "metadata": {"page_label": "5", "file_name": "bitcoin_es_latam.pdf"}}, "81a8913c-822e-4e79-8833-2f5b08316522": {"node_ids": ["6a81c1e3-7015-4838-b92e-7ba2daddc7b6", "e3050b62-88fe-4864-a8cf-c7a4991221d0"], "metadata": {"page_label": "6", "file_name": "bitcoin_es_latam.pdf"}}, "a94fec68-88fe-4283-85af-69ff58f97124": {"node_ids": ["ddfe2e85-6094-44e2-9422-94a455ac2cdb"], "metadata": {"page_label": "7", "file_name": "bitcoin_es_latam.pdf"}}, "b2507bfa-de06-4c44-afb4-49c78ecd4ec6": {"node_ids": ["92791559-6a71-4111-9529-d76a113e40b7"], "metadata": {"page_label": "8", "file_name": "bitcoin_es_latam.pdf"}}, "819adf5a-5922-4e59-80b1-67a8615496cd": {"node_ids": ["3991b84f-fd81-4d6c-9625-363cd2fb1aab"], "metadata": {"page_label": "9", "file_name": "bitcoin_es_latam.pdf"}}}}